// 因为js底层中，每个变量都是二进制表示，固定长度64位，其中第 1 位是符号位，再往后 11 位是指数位，最后 52 位是尾数位
// 而 0.1 和 0.2转为二进制的时候是无限循环小数，js会进行截取，截取之后会比原来大一丢丢

// 如何解决？ 
// console.log((0.1 * 1000 + 0.2 * 1000) / 1000 === 0.3)  // true
// 0.2+0.3  === 0.5  二进制相加大于52位，且前 52 位尾数都是 0，截取后恰好是0.1000000000000000000000000000000000000000000000000000也就是0.5

console.log(0.1) // 0.1 console.log 会转成十进制，再转成字符串，转换过程中取了近似值


