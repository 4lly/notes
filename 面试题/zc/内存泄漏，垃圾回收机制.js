// 什么是内存泄漏？
// 内存泄漏是指不再用的内存没有被及时释放出来，导致该段内存无法被使用，就是内存泄漏 

// 为什么会内存泄漏 ？ 
// 内存泄漏是指我们无法通过 js 访问某个对象，但是垃圾回收机制却认为该对象有被引用，因此垃圾回收机制不会释放该对象，
// 导致该对象内存永远不会被释放，积少成多，系统会越来越卡直至崩溃

// 垃圾回收机制都有哪些策略 ？
/**
 * 标记清除法： 当变量进入执行环境时，标记为进入环境，从逻辑上讲，进入环境的变量占用的内存永远无法释放，因为只要执行流进入相应的环境，就有可能使用
 *            当变量离开环境时，它被标记为离开环境。垃圾收集器运行时，会标记存储在内存中的所有变量。然后，它将去除环境中的变量和被环境中的变量
 *            引用的变量的标记，之后添加标记的变量将被视为准备删除的变量，因为环境中的变量无法访问这些变量，最终。垃圾收集器完成内存清除，
 *             销毁标记值，回收占用的内存空间。
 *    
 * 优点： 可以回收相互引用的对象值，
 * 缺点： 空间碎片化，清理出的内存不是连续的，不联系的空间使用并不完美，需要维护一个空闲列表，效率不高（在进行GC的时候，需要停止整个应用程序，导致用户体验差）
 * 
 * 引用计数法： 当声明一个变量并给该变量赋值一个引用类型的值的时候，该值的计数+1，当该值赋值给另外一个值的时候，该计数+1，当该值被其他
 *            值取代的时候，该计数-1，当计数为 0的时候，说明无妨访问该值了，垃圾回收机制清除该对象
 * 
 * 缺点： 当两个对象循环引用的时候，引用计数无计可施，如果循环引用多次执行的话，会导致崩溃等问题，所以后来被标记清除法代替。
 */